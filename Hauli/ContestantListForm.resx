<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        DQAAAk1TRnQBSQFMAgEBBQEAAQgBAgEIAQIBEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEQBgABEBIAAd0BewFAAWIBQAFiAUABYgFAAWIBQAFiAUABYgFAAWIBQAFiAUABYgFA
        AWIBQAFiAUABYgFAAWIBQAFiAd0Be2AAAUABYgHhAXYBIQF/ASEBfwEiAX8BIQF/ASEBfwEhAX8BIQF/
        ASEBfwEhAX8BIQF/ASEBfwEhAX8BwQFyAUABYmAAAUABZgHiAXYBIgF/ASMBfwEiAX8BIwF/ASIBfwQA
        ASMBfwEiAX8BIwF/ASIBfwEiAX8BwQFyAUABZmAAAd0BewFgAWYBRAF/AUQBfwFEAX8BRAF/AUQBfwQA
        AUQBfwFEAX8BRAF/AUQBfwFEAX8BYAFmAd0Be2IAAWABagHjAXYBRgF/AUYBfwFGAX8BRgF/AUYBfwFG
        AX8BRgF/AUYBfwFGAX8BRgF/AeMBcgFgAWpkAAHdAXsBgQFqAWgBfwFoAX8BaAF/AWgBfwQAAWgBfwFo
        AX8BaAF/AWgBfwGBAWoB3QF7ZgABgQFuAUcBewGKAX8BigF/AYoBfwQAAYoBfwGKAX8BigF/AUgBewGB
        AW5oAAHdAXsBoQFuAYwBfwGMAX8BrAF/BAABjAF/AawBfwGsAX8BoQFuAd0Be2oAAcIBcgGLAX8BrgF/
        Aa4BfwQAAa4BfwGuAX8BiwF/AcIBcmwAAd0BewHiAXYB0AF/AdABfwQAAdABfwHQAX8B4gF2Ad0Be24A
        AeIBdgGuAX8B8gF/BAAB8gF/Aa4BfwHiAXZwAAHdAXsBAgF7AfMBfwQAAfMBfwECAXsB3QF7cgABAwF7
        AbABfwH0AX8B9AF/AbABfwEDAXt0AAHdAXsBIwF7AfQBfwH0AX8BAwF7Ad0Be3YAASMBfwGwAX8BsAF/
        ASMBf3gAAd0BewEjAX8BIwF/Ad0Be3oAAf8BfwH/AX8SAAH/AX8BOQFvAf8Bfw4AAVoBcwHeAXsGAAH/
        AX8B/wF/AXoBbwEHAVoBwwEkAZoBdwGaAXsBFgFvARYBawEIAVoBCAFaAZEBYgH/AX8IAAF7AW8BewFv
        Af8BfxwAAf8BfwG9AXcBewFvAfcBXgHWAVoBtQFWARgBYwHeAXsMAAH/AX8BxgFgAWMBXAHvAV0B/wF/
        CgABMQFiAQgBeQFrAXUBvQF3AgAB/wF/Af8BfwH+AX8BrQFuASoBXgEFATkBYgFJAgABgwFJAaIBKAHI
        AVEBSQFiAWwBZgHdAXsB/wF/Af8BfwIAAXsBbwF7AW8BewFvAXsBbxYAAf8BfwE5AWcB1gFaAbUBVgH4
        AV4BWgFrAZwBcwG9AXcBnAFzAXsBbwH3AV4KAAH/AX8BxgFcAQABWAEhAVwBYwFgAe8BXQH/AX8GAAEx
        AWIB5wFwAcYBdAHnAXgBawF1Ad4BewH/AX8B/wF/AaMBIAGhASgBRQFBAYcBUQHGAVUBAgFmAcIBUQFj
        AUUBpQFNAQQBOQECATUBwwEoAd0BewH/AX8CAAF7AW8BewFvAXsBbwF7AW8WAAFaAWsBOgFnAVoBawH3
        AWIBGAFnATkBZwFaAWsBewFvAZwBcwGcAXMB9wFeAd4BewgAAb0BewFKAWUBAAFYASEBXAEhAVwBhAFg
        Ae8BXQH/AX8CAAExAWIBxgFsAaUBcAHGAXQBxgF0AQgBdQFaAXMCAAH/AX8BRQE5AUUBOQFEATkBZAFJ
        AaUBVQEHAXsBpQFyAUMBagEiATkBQgFyASQBNQElATkB3QF7Af8BfwQAAXsBbwF7AW8YAAE5AWcBewFv
        AXsBbwH2AV4BMwF3AS0BewEUAW8BOQFnAVoBawF7AW8BWgFrAZwBcwoAAXMBagFKAWUBAAFcASEBXAEh
        AVwBhAFgAe8BXQEQAWIBpQFoAYQBaAGlAWwBpQFwAecBcAExAWIGAAH/AX8BvQF7AQQBagHBAVUBYQFJ
        AacBagEnAXMBwgFVAWEBaQEiAX4BRQFuAbwBewH/AX8iAAGcAXMBOQFnAXsBbwF7AXMBTwF/AaABfgHD
        AX4BEAFzATgBZwFaAWsBewFvATkBZwwAAXMBagFKAWUBIQFcASEBXAEhAWABhAFkAaUBZAFjAWQBYwFo
        AYQBaAHGAWwBMQFiCgAB/wF/AWYBfgGEAX4BxAF2AeUBJAFmAV4B4wF+AeIBfgFCAX4BzAF6Af8BfwgA
        AXsBbwF7AW8B/wF/FgAB3gF7AfcBXgF7AW8BewFvAXgBcwEKAX8BwAF+AcABfgEKAXsBNgFrAVoBawH3
        AV4OAAFzAWoBawFlASEBXAEhAVwBQgFgAUIBYAFCAWQBYwFkAaUBaAExAWIMAAH/AX8BzQF6Ae8BegGC
        AX4B1AF/AaEBfgFlAX8BgQF+AcEBfQHyAXoB/wF/BgABewFvAXsBbwF7AW8BewFvFgAB/wF/AdYBWgF7
        AW8BewFvAXsBbwF6AXMBUAF7AeIBfgHAAX4BBQF/ATIBbwG1AVYB/wF/DgABcwFqAWsBaQEhAVwBIQFg
        AUIBYAFCAWABpQFkARABYg4AAf8BfwH/AX8BIwF+AWIBfgHOAX8BgAF+AUUBfwFBAX4BuwF7Af4BfwH/
        AX8GAAF7AW8BewFvAXsBbwF7AW8YAAH3AV4BnAFzAXsBbwF7AW8BewFvAXsBbwF2AXcBBwF/AeABfgEC
        AX8B7gFqARgBYwH/AX8MAAExAWIBYwFcASEBXAEhAVwBIQFgAUIBYAGEAWQB7wFdAf8Bfw4AAf8BfwGv
        AXoBIgF+ASYBfwFhAX4BYQF+AcABfQH+AX8B/wF/CgABewFvAXsBbxoAATkBZwGcAXMBewFvAXsBbwF7
        AW8BewFvAXsBbwF5AXMBTQF7AQEBfwEAAX8BCgFzAdYBWgHeAXsIAAExAWIBCAFlAcYBYAFCAVwBIQFc
        ASEBXAEhAVwBIQFgAYQBYAHvAV0B/wF/DAAB/wF/Af4BfwHiAX0BYwF+ASEBfgHBAX0BbAF6Ad0BfwH/
        AX8oAAGcAXMBewFvAXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAXsBbwFzAXcBJQF/AU8BdwE5AXMBlAFe
        AXsBbwQAARABYgEpAWUBxgFgAcYBYAHGAWABCAFlAc4BbQGlAWABpQFgAaUBZAHnAWQB7wFdAf8BfwwA
        Af4BfwF3AXsBAwF+AQMBfgGBAX0BvAF7Af8BfwwAAXsBbwF7AW8B/wF/GAAB3gF7ARgBYwGcAXMBnAFz
        AXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAXkBcwF6AXMBcgF6ATABfgHWAVoCAAEQAWYBKQFlAecBYAHn
        AWABxgFgAQgBZQExAWIBcwFqAc4BbQHGAWABpQFgAaUBYAHnAWQB7wFdAf8BfwoAAf8BfwH+AX8BwwF9
        AcMBfQFWAXsB/gF/Af8BfwoAAXsBbwF7AW8BewFvAXsBbxgAAf8BfwHWAVoBnAFzAZwBcwGcAXMBewFv
        AXsBbwF7AW8BewFvAXsBbwGcAXMB1gFaAZQBXgGUAV4BvQF3AZwBewFKAWUBCAFhAecBYAHnAWABKQFl
        ATEBYgQAAXMBagHOAW0BxgFgAcYBYAHGAWAB5wFkATkBbwoAAf8BfwH/AX8B6AF5ASoBegHeAX8B/wF/
        Af8BfwoAAXsBbwF7AW8BewFvAXsBbxoAAdYBWgGcAXMBnAFzAZwBcwGcAXMBnAFzAXsBbwFaAWsB9wFe
        AdYBWgG9AXcB3gF7Ad4BewQAAVIBcgEIAWUBCAFhASkBZQEQAWIIAAFzAWoBzgFtAcYBYAHGAWABKQFl
        Af8BfwwAAf8BfwF5AXsBNgF7Af8BfxAAAXsBbwF7AW8cAAF7AW8BGAFjATkBZwH3AV4B1gFaARgBYwFa
        AWsBvQF3Ad4Bew4AAVIBcgFKAWUBEAFmDAABcwFqAc4BbQFKAWUB/wF/EAAB/wF/AbEBegH/AX8yAAG9
        AXcBvQF3Ad4BexoAAZwBexAAAb0BewH/AX8SAAH/AX8B/gF/Af8BfywAAUIBTQE+BwABPgMAASgDAAFA
        AwABIAMAAQEBAAEBBgABARYAA/8hAAGAAQEGAAGAAQEGAAHAAQMGAAHAAQMGAAHgAQcGAAHgAQcGAAHw
        AQ8GAAHwAQ8GAAH4AR8GAAH4AR8GAAH8AT8GAAH8AT8GAAH+AX8BxwHzAYABAwHHAf8B4AEfAYMB4QIA
        AYcB/wEAAR8BAQHAAgABhwH/AQABDwEAAoABAAHPAf8BAAEPAYABAQHAAQEC/wEAAQ8BwAEDAeABAwHH
        Af8BAAEPAeABBwHgAQMBhwH/AQABBwHwAQ8B4AEDAYcB/wGAAQMB8AEHAfABBwHPAf8BgAEBAeABAwHw
        AQcC/wGAAQABwAEBAfgBDwHHAf8BgAEAAYABAAH4AQ8BhwH/AYABAAEBAYAB+AEPAYcB/wHAAQEBgwHA
        AfwBPwHPAf8BwAEfAccB4QH+AT8C/wHjAf8B7wHzAf4BPwL/Cw==
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>242, 17</value>
  </metadata>
</root>