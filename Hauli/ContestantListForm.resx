<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACA
        CQAAAk1TRnQBSQFMAgEBAwEAAYgBAQGIAQEBEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCCAAAf8BfwH/AX8SAAH/AX8BOQFvAf8Bfw4AAVoBcwHeAXsGAAH/AX8B/wF/
        AXoBbwEHAVoBwwEkAZoBdwGaAXsBFgFvARYBawEIAVoBCAFaAZEBYgH/AX8qAAH/AX8BvQF3AXsBbwH3
        AV4B1gFaAbUBVgEYAWMB3gF7DAAB/wF/AcYBYAFjAVwB7wFdAf8BfwoAATEBYgEIAXkBawF1Ab0BdwIA
        Af8BfwH/AX8B/gF/Aa0BbgEqAV4BBQE5AWIBSQIAAYMBSQGiASgByAFRAUkBYgFsAWYB3QF7Af8BfwH/
        AX8gAAH/AX8BOQFnAdYBWgG1AVYB+AFeAVoBawGcAXMBvQF3AZwBcwF7AW8B9wFeCgAB/wF/AcYBXAEA
        AVgBIQFcAWMBYAHvAV0B/wF/BgABMQFiAecBcAHGAXQB5wF4AWsBdQHeAXsB/wF/Af8BfwGjASABoQEo
        AUUBQQGHAVEBxgFVAQIBZgHCAVEBYwFFAaUBTQEEATkBAgE1AcMBKAHdAXsB/wF/IAABWgFrAToBZwFa
        AWsB9wFiARgBZwE5AWcBWgFrAXsBbwGcAXMBnAFzAfcBXgHeAXsIAAG9AXsBSgFlAQABWAEhAVwBIQFc
        AYQBYAHvAV0B/wF/AgABMQFiAcYBbAGlAXABxgF0AcYBdAEIAXUBWgFzAgAB/wF/AUUBOQFFATkBRAE5
        AWQBSQGlAVUBBwF7AaUBcgFDAWoBIgE5AUIBcgEkATUBJQE5Ad0BewH/AX8gAAE5AWcBewFvAXsBbwH2
        AV4BMwF3AS0BewEUAW8BOQFnAVoBawF7AW8BWgFrAZwBcwoAAXMBagFKAWUBAAFcASEBXAEhAVwBhAFg
        Ae8BXQEQAWIBpQFoAYQBaAGlAWwBpQFwAecBcAExAWIGAAH/AX8BvQF7AQQBagHBAVUBYQFJAacBagEn
        AXMBwgFVAWEBaQEiAX4BRQFuAbwBewH/AX8iAAGcAXMBOQFnAXsBbwF7AXMBTwF/AaABfgHDAX4BEAFz
        ATgBZwFaAWsBewFvATkBZwwAAXMBagFKAWUBIQFcASEBXAEhAWABhAFkAaUBZAFjAWQBYwFoAYQBaAHG
        AWwBMQFiCgAB/wF/AWYBfgGEAX4BxAF2AeUBJAFmAV4B4wF+AeIBfgFCAX4BzAF6Af8BfyQAAd4BewH3
        AV4BewFvAXsBbwF4AXMBCgF/AcABfgHAAX4BCgF7ATYBawFaAWsB9wFeDgABcwFqAWsBZQEhAVwBIQFc
        AUIBYAFCAWABQgFkAWMBZAGlAWgBMQFiDAAB/wF/Ac0BegHvAXoBggF+AdQBfwGhAX4BZQF/AYEBfgHB
        AX0B8gF6Af8BfyQAAf8BfwHWAVoBewFvAXsBbwF7AW8BegFzAVABewHiAX4BwAF+AQUBfwEyAW8BtQFW
        Af8Bfw4AAXMBagFrAWkBIQFcASEBYAFCAWABQgFgAaUBZAEQAWIOAAH/AX8B/wF/ASMBfgFiAX4BzgF/
        AYABfgFFAX8BQQF+AbsBewH+AX8B/wF/JgAB9wFeAZwBcwF7AW8BewFvAXsBbwF7AW8BdgF3AQcBfwHg
        AX4BAgF/Ae4BagEYAWMB/wF/DAABMQFiAWMBXAEhAVwBIQFcASEBYAFCAWABhAFkAe8BXQH/AX8OAAH/
        AX8BrwF6ASIBfgEmAX8BYQF+AWEBfgHAAX0B/gF/Af8BfygAATkBZwGcAXMBewFvAXsBbwF7AW8BewFv
        AXsBbwF5AXMBTQF7AQEBfwEAAX8BCgFzAdYBWgHeAXsIAAExAWIBCAFlAcYBYAFCAVwBIQFcASEBXAEh
        AVwBIQFgAYQBYAHvAV0B/wF/DAAB/wF/Af4BfwHiAX0BYwF+ASEBfgHBAX0BbAF6Ad0BfwH/AX8oAAGc
        AXMBewFvAXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAXsBbwFzAXcBJQF/AU8BdwE5AXMBlAFeAXsBbwQA
        ARABYgEpAWUBxgFgAcYBYAHGAWABCAFlAc4BbQGlAWABpQFgAaUBZAHnAWQB7wFdAf8BfwwAAf4BfwF3
        AXsBAwF+AQMBfgGBAX0BvAF7Af8BfyoAAd4BewEYAWMBnAFzAZwBcwF7AW8BewFvAXsBbwF7AW8BewFv
        AXsBbwF5AXMBegFzAXIBegEwAX4B1gFaAgABEAFmASkBZQHnAWAB5wFgAcYBYAEIAWUBMQFiAXMBagHO
        AW0BxgFgAaUBYAGlAWAB5wFkAe8BXQH/AX8KAAH/AX8B/gF/AcMBfQHDAX0BVgF7Af4BfwH/AX8qAAH/
        AX8B1gFaAZwBcwGcAXMBnAFzAXsBbwF7AW8BewFvAXsBbwF7AW8BnAFzAdYBWgGUAV4BlAFeAb0BdwGc
        AXsBSgFlAQgBYQHnAWAB5wFgASkBZQExAWIEAAFzAWoBzgFtAcYBYAHGAWABxgFgAecBZAE5AW8KAAH/
        AX8B/wF/AegBeQEqAXoB3gF/Af8BfwH/AX8sAAHWAVoBnAFzAZwBcwGcAXMBnAFzAZwBcwF7AW8BWgFr
        AfcBXgHWAVoBvQF3Ad4BewHeAXsEAAFSAXIBCAFlAQgBYQEpAWUBEAFiCAABcwFqAc4BbQHGAWABxgFg
        ASkBZQH/AX8MAAH/AX8BeQF7ATYBewH/AX8wAAF7AW8BGAFjATkBZwH3AV4B1gFaARgBYwFaAWsBvQF3
        Ad4Bew4AAVIBcgFKAWUBEAFmDAABcwFqAc4BbQFKAWUB/wF/EAAB/wF/AbEBegH/AX8yAAG9AXcBvQF3
        Ad4BexoAAZwBexAAAb0BewH/AX8SAAH/AX8B/gF/Af8BfywAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAH+AX8BxwHzAYABAwIAAeABHwGDAeEFAAEfAQEBwAUAAQ8BAAKABAABDwGA
        AQEBwAEBAwABDwHAAQMB4AEDAwABDwHgAQcB4AEDAwABBwHwAQ8B4AEDAgABgAEDAfABBwHwAQcCAAGA
        AQEB4AEDAfABBwIAAYABAAHAAQEB+AEPAgABgAEAAYABAAH4AQ8CAAGAAQABAQGAAfgBDwIAAcABAQGD
        AcAB/AE/AgABwAEfAccB4QH+AT8CAAHjAf8B7wHzAf4BPwIACw==
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>242, 17</value>
  </metadata>
</root>